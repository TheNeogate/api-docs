{
  "openapi": "3.0.1",
  "info": {
    "title": "API V1 Neogate",
    "description": "Start integrating our API in under 5 minutes. This document provides an overview of the API, authentication details, and all available endpoints.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.neogate.org",
      "description": "Base URL for API requests"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Health",
        "description": "Check the health of the API.",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    },
                    "description": {
                      "type": "string",
                      "example": "API is up and running"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/health/operators": {
      "get": {
        "summary": "Get payment methods",
        "description": "Fetch the list of payment methods supported by the API.",
        "operationId": "getPaymentMethods",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API Key for authentication"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "CI": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/collect/create": {
      "post": {
        "summary": "Create a collect",
        "description": "Initialize a collection with the API.",
        "operationId": "startCollection",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Bearer Token for authentication"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order_id": {
                    "type": "string",
                    "example": "1931766d-5a85-4a8f-a4af-700451ca0773"
                  },
                  "amount": {
                    "type": "integer",
                    "example": 200
                  },
                  "currency": {
                    "type": "string",
                    "example": "XOF"
                  },
                  "notes": {
                    "type": "string",
                    "example": "Payment description"
                  },
                  "phone_number": {
                    "type": "string",
                    "example": "+2250701020304"
                  },
                  "webhook_url": {
                    "type": "string",
                    "example": "https://example.com/notify-url"
                  },
                  "custom_field": {
                    "type": "string",
                    "example": "any_string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Collection created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "CREATED"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "example": "ffe2dec3-ce25-4bb6-874f-785df41f09df"
                        },
                        "status": {
                          "type": "string",
                          "example": "new"
                        },
                        "amount": {
                          "type": "integer",
                          "example": 200
                        },
                        "currency": {
                          "type": "string",
                          "example": "XOF"
                        },
                        "operator": {
                          "type": "string",
                          "example": "ORANGE_CI"
                        },
                        "country": {
                          "type": "string",
                          "example": "CI"
                        },
                        "country_prefix": {
                          "type": "string",
                          "example": "+225"
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "otp": {
                              "type": "object",
                              "properties": {
                                "required": {
                                  "type": "boolean",
                                  "example": true
                                },
                                "length": {
                                  "type": "integer",
                                  "example": 4
                                }
                              }
                            },
                            "payment_url": {
                              "type": "boolean",
                              "example": false
                            },
                            "notes_before": {
                              "type": "string",
                              "example": "Instruction"
                            },
                            "notes_after": {
                              "type": "string",
                              "example": "Instruction"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "status": {
                      "type": "string",
                      "example": "Unprocessable Entity"
                    },
                    "message": {
                      "type": "string",
                      "example": "Les paramètres envoyés sont invalides"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/collect/process": {
      "post": {
        "summary": "Process a collection",
        "description": "After creating a collection, process it with the API.",
        "operationId": "processCollection",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Bearer Token for authentication"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "otp_code": {
                    "type": "string"
                  },
                  "phone_number": {
                    "type": "string"
                  },
                  "operator": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Collection processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/collect/{token}": {
      "get": {
        "summary": "Check collection status",
        "description": "Retrieve the status of a collection by token.",
        "operationId": "getCollectionStatus",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Bearer Token for authentication"
          },
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The token of the collection to check"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection status retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/transfer/create": {
      "post": {
        "summary": "Create a transfer",
        "description": "Create a payout transfer.",
        "operationId": "createTransfer",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Bearer Token for authentication"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order_id": {
                    "type": "string",
                    "example": "fd60367d-41b7-4274-a4b1-f715f631573e"
                  },
                  "amount": {
                    "type": "integer",
                    "example": 250
                  },
                  "operator": {
                    "type": "string",
                    "example": "ORANGE_CI"
                  },
                  "currency": {
                    "type": "string",
                    "example": "XOF"
                  },
                  "phone_number": {
                    "type": "string",
                    "example": "+2250701020304"
                  },
                  "webhook_url": {
                    "type": "string",
                    "example": "https://example.com/notify-url"
                  },
                  "custom_field": {
                    "type": "string",
                    "example": "any_string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Transfer created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "CREATED"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "example": "c5828a46-665e-48fd-a287-43c508599bfd"
                        },
                        "created_at": {
                          "type": "string",
                          "example": "2023-10-02T18:22:20.000000Z"
                        },
                        "done_at": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "order_id": {
                          "type": "string",
                          "example": "fd60367d-41b7-4274-a4b1-f715f631573e"
                        },
                        "country": {
                          "type": "string",
                          "example": "CI"
                        },
                        "amount": {
                          "type": "integer",
                          "example": 250
                        },
                        "currency": {
                          "type": "string",
                          "example": "XOF"
                        },
                        "phone_number": {
                          "type": "string",
                          "example": "+2250701020304"
                        },
                        "webhook_url": {
                          "type": "string",
                          "example": "https://example.com/notify-url"
                        },
                        "custom_field": {
                          "type": "string",
                          "nullable": true,
                          "example": null
                        },
                        "status": {
                          "type": "string",
                          "example": "new"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "status": {
                      "type": "string",
                      "example": "Unprocessable Entity"
                    },
                    "message": {
                      "type": "string",
                      "example": "Solde insuffisant."
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/transfer/process": {
      "post": {
        "summary": "Send a transfer for processing",
        "description": "Submit a previously created transfer.",
        "operationId": "sendTransfer",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Bearer Token for authentication"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transfer submitted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/transfer/{token}": {
      "get": {
        "summary": "Check transfer status",
        "description": "Retrieve the status of a transfer by token.",
        "operationId": "getCollectionStatus",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Bearer Token for authentication"
          },
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The token of the collection to check"
          }
        ],
        "responses": {
          "200": {
            "description": "Transfer status retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}